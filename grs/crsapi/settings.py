"""
Django settings for crsapi project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import socket

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '_k4zi7emd(w(_j%5dud2f!qhp%5o5u$s9$a&-0x0xn-!px#mzf'

# SECURITY WARNING: don't run with debug turned on in production!


LOCAL = True
DEBUG = True
TESTING = True

ALLOWED_HOSTS = []

print('local: %s, debug: %s' % (LOCAL, DEBUG))
# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crsapi',
    'twothreeandme',
    'users'
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'crsapi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'crsapi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases
if LOCAL:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'crsapi',
            'USER': 'gims',
            'PASSWORD': 'gims0202',
            'HOST': 'localhost',
            'PORT': '3306',
            'OPTIONS': {
                'sql_mode': 'traditional',
                'charset': 'utf8mb4',
            }
        }
    }

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
    },
    'loggers': {
        'twothreeandme': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
    },
}

ANDME_URL = 'https://api.23andme.com'
# REDIRECT_URL = 'https://cgs-dev.stanfordmed.org/mybackend/cgsapi/'
REDIRECT_URL = 'https://10.249.17.25/twothreeandme/ttm_response/'
CLIENT_ID = 'cdb61d6f360a2f31eb87f2c50d221272'
CLIENT_SECRET = 'c417edb301a38a71e365b10c66693250'
# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

ADMIN_ACCOUNT = 's0199669'
MANAGER_ACCOUNT = 's0199669'


LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'America/Los_Angeles'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR,  'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'staticfiles')
]

GIT_ROOT = os.path.abspath(os.path.join(BASE_DIR, os.pardir))
try:
    from git import Repo
    GIT_BRANCH = Repo(GIT_ROOT).active_branch.name
except:
    GIT_BRANCH = ''
